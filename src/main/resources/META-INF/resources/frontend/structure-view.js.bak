const template = document.createElement('template');

template.innerHTML = `<canvas id="123" class="actstruct"></canvas>`

class StructureView extends HTMLElement {
    constructor() {
        super();
        this._shadowRoot = this.attachShadow({ mode: 'open' });
        this._shadowRoot.appendChild(template.content.cloneNode(true));
    }

    connectedCallback() {
        this.canvas = this._shadowRoot.querySelector('canvas');

        this.draw();
    }

    draw() {
        let molecule = null;

        // molecule = OCL.Molecule.fromSmiles('C[C@H](Cl)CC');
        // molecule = OCL.Molecule.fromIDCode(this.idcode, this.coordinates);

        if (this.idcode != null && this.idcode != "") {
            molecule = OCL.Molecule.fromIDCode(this.idcode);
        } else if (this.smiles != null && this.smiles != "") {
            molecule = OCL.Molecule.fromSmiles(this.smiles);
        }

        if (this.canvas != null) {
            console.info("OCL draw");
            OCL.StructureView.drawMolecule(this.canvas, molecule);
            // window.OCL.StructureView.drawStructure("123", "difH@BAIVUxZ`@@@", "!BbGvH@hc}b@K~_xc}bOw~_p");
        }
    }

    get idcode() {
        return this.getAttribute('idcode');
    }

    get smiles() {
        return this.getAttribute('smiles');
    }

    // component attributes
    static get observedAttributes() {
        return [
            'idcode',
            'smiles'
        ];
    }

    attributeChangedCallback(attribute, oldValue, newValue) {
        if (oldValue === newValue)
            return;

        console.info("attributeChangedCallback:" + attribute + "=" + newValue);

        this.draw();
    }
}

window.customElements.define('structure-view', StructureView);
